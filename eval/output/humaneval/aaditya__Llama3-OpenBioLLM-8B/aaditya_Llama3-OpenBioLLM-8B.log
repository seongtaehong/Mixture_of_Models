INFO 05-23 22:43:20 [importing.py:53] Triton module has been replaced with a placeholder.
INFO 05-23 22:43:20 [__init__.py:239] Automatically detected platform cuda.
2025-05-23:22:43:26 INFO     [__main__:440] Selected Tasks: ['humaneval_instruct']
2025-05-23:22:43:26 INFO     [evaluator:185] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234 | Setting fewshot manual seed to 1234
2025-05-23:22:43:26 INFO     [evaluator:223] Initializing vllm model, with arguments: {'pretrained': 'aaditya/Llama3-OpenBioLLM-8B', 'tensor_parallel_size': 1, 'dtype': 'auto', 'gpu_memory_utilization': 0.8}
INFO 05-23 22:43:37 [config.py:717] This model supports multiple tasks: {'reward', 'classify', 'embed', 'generate', 'score'}. Defaulting to 'generate'.
INFO 05-23 22:43:38 [config.py:2003] Chunked prefill is enabled with max_num_batched_tokens=8192.
INFO 05-23 22:43:40 [core.py:58] Initializing a V1 LLM engine (v0.8.5.post1) with config: model='aaditya/Llama3-OpenBioLLM-8B', speculative_config=None, tokenizer='aaditya/Llama3-OpenBioLLM-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=8192, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='auto', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1234, served_model_name=aaditya/Llama3-OpenBioLLM-8B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":3,"custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
2025-05-23 22:43:42,387 - INFO - flashinfer.jit: Prebuilt kernels not found, using JIT backend
WARNING 05-23 22:43:42 [utils.py:2522] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f2d906a6750>
INFO 05-23 22:43:43 [parallel_state.py:1004] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 05-23 22:43:43 [cuda.py:221] Using Flash Attention backend on V1 engine.
INFO 05-23 22:43:43 [topk_topp_sampler.py:44] Currently, FlashInfer top-p & top-k sampling sampler is disabled because FlashInfer>=v0.2.3 is not backward compatible. Falling back to the PyTorch-native implementation of top-p & top-k sampling.
INFO 05-23 22:43:44 [gpu_model_runner.py:1329] Starting to load model aaditya/Llama3-OpenBioLLM-8B...
INFO 05-23 22:43:45 [weight_utils.py:265] Using model weights format ['*.bin']
Loading pt checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
Loading pt checkpoint shards:  25% Completed | 1/4 [00:05<00:16,  5.57s/it]
Loading pt checkpoint shards:  50% Completed | 2/4 [00:06<00:06,  3.03s/it]
Loading pt checkpoint shards:  75% Completed | 3/4 [00:13<00:04,  4.89s/it]
Loading pt checkpoint shards: 100% Completed | 4/4 [00:19<00:00,  5.24s/it]
Loading pt checkpoint shards: 100% Completed | 4/4 [00:19<00:00,  4.92s/it]

INFO 05-23 22:44:05 [loader.py:458] Loading weights took 19.69 seconds
INFO 05-23 22:44:05 [gpu_model_runner.py:1347] Model loading took 14.9596 GiB and 21.359066 seconds
INFO 05-23 22:44:14 [backends.py:420] Using cache directory: /mnt/raid6/hst/.cache/vllm/torch_compile_cache/11b8d6a557/rank_0_0 for vLLM's torch.compile
INFO 05-23 22:44:14 [backends.py:430] Dynamo bytecode transform time: 8.23 s
INFO 05-23 22:44:48 [backends.py:118] Directly load the compiled graph(s) for shape None from the cache, took 33.440 s
INFO 05-23 22:44:50 [monitor.py:33] torch.compile takes 8.23 s in total
INFO 05-23 22:44:52 [kv_cache_utils.py:634] GPU KV cache size: 176,144 tokens
INFO 05-23 22:44:52 [kv_cache_utils.py:637] Maximum concurrency for 8,192 tokens per request: 21.50x
INFO 05-23 22:46:24 [gpu_model_runner.py:1686] Graph capturing finished in 90 secs, took 1.59 GiB
INFO 05-23 22:46:24 [core.py:159] init engine (profile, create kv cache, warmup model) took 138.90 seconds
INFO 05-23 22:46:24 [core_client.py:439] Core engine process 0 ready.
2025-05-23:22:46:36 INFO     [evaluator:286] humaneval_instruct: Using gen_kwargs: {'until': ['\nclass', '\ndef', '\n#', '\nif', '\nprint'], 'max_gen_toks': 1024, 'do_sample': False}
2025-05-23:22:46:36 INFO     [api.task:434] Building contexts for humaneval_instruct on rank 0...
  0%|          | 0/164 [00:00<?, ?it/s] 90%|█████████ | 148/164 [00:00<00:00, 1476.34it/s]100%|██████████| 164/164 [00:00<00:00, 1474.53it/s]
2025-05-23:22:46:36 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=humaneval_instruct,output_type=generate_until,num_fewshot=0,num_samples=164); document 0; context prompt (starting on next line):    
Write a solution to the following problem and make sure that it passes the tests:
```from typing import List


def has_close_elements(numbers: List[float], threshold: float) -> bool:
    """ Check if in given list of numbers, are any two numbers closer to each other than
    given threshold.
    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)
    False
    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)
    True
    """
 Here is the completed function:
```python
from typing import List


def has_close_elements(numbers: List[float], threshold: float) -> bool:
    """ Check if in given list of numbers, are any two numbers closer to each other than
    given threshold.
    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)
    False
    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)
    True
    """


(end of prompt on previous line)
target string or answer choice index (starting on next line):


METADATA = {
    'author': 'jt',
    'dataset': 'test'
}


def check(candidate):
    assert candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == True
    assert candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == False
    assert candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == True
    assert candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == False
    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == True
    assert candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == True
    assert candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == False


check(has_close_elements)
(end of target on previous line)
2025-05-23:22:46:36 INFO     [evaluator_utils:210] Request: Instance(request_type='generate_until', doc={'task_id': 'HumanEval/0', 'prompt': 'from typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    """ Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    """\n', 'canonical_solution': '    for idx, elem in enumerate(numbers):\n        for idx2, elem2 in enumerate(numbers):\n            if idx != idx2:\n                distance = abs(elem - elem2)\n                if distance < threshold:\n                    return True\n\n    return False\n', 'test': "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == True\n    assert candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == False\n    assert candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == True\n    assert candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == False\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == True\n    assert candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == True\n    assert candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == False\n\n", 'entry_point': 'has_close_elements'}, arguments=('Write a solution to the following problem and make sure that it passes the tests:\n```from typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    """ Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    """\n Here is the completed function:\n```python\nfrom typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    """ Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    """\n\n', {'until': ['\nclass', '\ndef', '\n#', '\nif', '\nprint'], 'max_gen_toks': 1024, 'do_sample': False}), idx=0, metadata=('humaneval_instruct', 0, 1), resps=[], filtered_resps={}, task_name='humaneval_instruct', doc_id=0, repeats=1)
2025-05-23:22:46:36 INFO     [evaluator:559] Running generate_until requests
Running generate_until requests:   0%|          | 0/164 [00:00<?, ?it/s]
Processed prompts:   0%|          | 0/164 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s][A
Processed prompts:   1%|          | 1/164 [00:05<15:30,  5.71s/it, est. speed input: 141.35 toks/s, output: 1.05 toks/s][A
Processed prompts:   2%|▏         | 3/164 [00:06<04:17,  1.60s/it, est. speed input: 317.53 toks/s, output: 2.98 toks/s][A
Processed prompts:   7%|▋         | 12/164 [00:06<00:44,  3.45it/s, est. speed input: 828.48 toks/s, output: 11.84 toks/s][A
Processed prompts:  13%|█▎        | 21/164 [00:06<00:20,  7.11it/s, est. speed input: 1074.23 toks/s, output: 22.39 toks/s][A
Processed prompts:  16%|█▌        | 26/164 [00:06<00:14,  9.43it/s, est. speed input: 1221.84 toks/s, output: 30.51 toks/s][A
Processed prompts:  20%|█▉        | 32/164 [00:06<00:10, 12.89it/s, est. speed input: 1467.36 toks/s, output: 43.61 toks/s][A
Processed prompts:  24%|██▍       | 40/164 [00:06<00:07, 17.60it/s, est. speed input: 1699.24 toks/s, output: 63.35 toks/s][A
Processed prompts:  27%|██▋       | 45/164 [00:06<00:06, 18.83it/s, est. speed input: 1858.49 toks/s, output: 79.21 toks/s][A
Processed prompts:  30%|███       | 50/164 [00:07<00:05, 22.51it/s, est. speed input: 1990.94 toks/s, output: 98.11 toks/s][A
Processed prompts:  34%|███▍      | 56/164 [00:07<00:04, 26.54it/s, est. speed input: 2135.08 toks/s, output: 122.29 toks/s][A
Processed prompts:  39%|███▉      | 64/164 [00:07<00:02, 35.30it/s, est. speed input: 2383.00 toks/s, output: 158.98 toks/s][A
Processed prompts:  44%|████▍     | 72/164 [00:07<00:02, 43.82it/s, est. speed input: 2634.90 toks/s, output: 198.22 toks/s][A
Processed prompts:  51%|█████     | 83/164 [00:07<00:01, 54.43it/s, est. speed input: 2961.95 toks/s, output: 255.87 toks/s][A
Processed prompts:  56%|█████▌    | 92/164 [00:07<00:01, 62.35it/s, est. speed input: 3287.75 toks/s, output: 306.40 toks/s][A
Processed prompts:  61%|██████    | 100/164 [00:07<00:01, 62.08it/s, est. speed input: 3515.68 toks/s, output: 351.93 toks/s][A
Processed prompts:  66%|██████▌   | 108/164 [00:07<00:01, 54.72it/s, est. speed input: 3661.35 toks/s, output: 397.48 toks/s][A
Processed prompts:  71%|███████▏  | 117/164 [00:08<00:00, 59.61it/s, est. speed input: 3927.57 toks/s, output: 457.25 toks/s][A
Processed prompts:  76%|███████▌  | 124/164 [00:08<00:00, 49.55it/s, est. speed input: 4083.52 toks/s, output: 500.73 toks/s][A
Processed prompts:  79%|███████▉  | 130/164 [00:08<00:00, 50.10it/s, est. speed input: 4310.96 toks/s, output: 544.50 toks/s][A
Processed prompts:  83%|████████▎ | 136/164 [00:08<00:00, 40.83it/s, est. speed input: 4395.77 toks/s, output: 584.03 toks/s][A
Processed prompts:  86%|████████▌ | 141/164 [00:08<00:00, 29.11it/s, est. speed input: 4422.51 toks/s, output: 613.00 toks/s][A
Processed prompts:  88%|████████▊ | 145/164 [00:09<00:00, 30.30it/s, est. speed input: 4523.14 toks/s, output: 647.62 toks/s][A
Processed prompts:  91%|█████████ | 149/164 [00:09<00:00, 28.64it/s, est. speed input: 4604.09 toks/s, output: 679.77 toks/s][A
Processed prompts:  93%|█████████▎| 153/164 [00:10<00:00, 12.33it/s, est. speed input: 4313.71 toks/s, output: 670.55 toks/s][A
Processed prompts:  95%|█████████▌| 156/164 [00:10<00:00, 11.11it/s, est. speed input: 4271.37 toks/s, output: 689.03 toks/s][A
Processed prompts:  96%|█████████▋| 158/164 [00:10<00:00,  9.00it/s, est. speed input: 4157.67 toks/s, output: 690.99 toks/s][A
Processed prompts:  98%|█████████▊| 160/164 [00:11<00:00,  7.76it/s, est. speed input: 4047.49 toks/s, output: 697.06 toks/s][A
Processed prompts:  99%|█████████▉| 162/164 [00:11<00:00,  6.57it/s, est. speed input: 3930.73 toks/s, output: 702.28 toks/s][A
Processed prompts:  99%|█████████▉| 163/164 [00:11<00:00,  6.45it/s, est. speed input: 3919.02 toks/s, output: 709.72 toks/s][A
Processed prompts: 100%|██████████| 164/164 [00:15<00:00,  1.61it/s, est. speed input: 3137.89 toks/s, output: 587.86 toks/s][AProcessed prompts: 100%|██████████| 164/164 [00:15<00:00, 10.91it/s, est. speed input: 3137.89 toks/s, output: 587.86 toks/s]
Running generate_until requests:   1%|          | 1/164 [00:15<40:55, 15.06s/it]Running generate_until requests: 100%|██████████| 164/164 [00:15<00:00, 10.89it/s]
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
2025-05-23:22:47:35 INFO     [loggers.evaluation_tracker:209] Saving results aggregated
2025-05-23:22:47:35 INFO     [loggers.evaluation_tracker:298] Saving per-sample results for: humaneval_instruct
vllm (pretrained=aaditya/Llama3-OpenBioLLM-8B,tensor_parallel_size=1,dtype=auto,gpu_memory_utilization=0.8), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: auto
|      Tasks       |Version|  Filter   |n-shot|Metric|   |Value |   |Stderr|
|------------------|------:|-----------|-----:|------|---|-----:|---|-----:|
|humaneval_instruct|      2|create_test|     0|pass@1|   |0.3598|±  |0.0376|

