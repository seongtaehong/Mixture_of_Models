INFO 05-25 02:22:37 [importing.py:53] Triton module has been replaced with a placeholder.
INFO 05-25 02:22:38 [__init__.py:239] Automatically detected platform cuda.
2025-05-25:02:22:42 INFO     [__main__:440] Selected Tasks: ['mathqa']
2025-05-25:02:22:42 INFO     [evaluator:185] Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234 | Setting fewshot manual seed to 1234
2025-05-25:02:22:42 INFO     [evaluator:223] Initializing hf model, with arguments: {'pretrained': 'mistralai/Mistral-7B-Instruct-v0.3'}
2025-05-25:02:22:45 INFO     [models.huggingface:137] Using device 'cuda'
2025-05-25:02:22:47 INFO     [models.huggingface:382] Model parallel was set to False, max memory was not set, and device map was set to {'': 'cuda'}
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:03<00:06,  3.39s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:06<00:03,  3.11s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:08<00:00,  2.86s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:08<00:00,  2.96s/it]
2025-05-25:02:23:03 INFO     [api.task:434] Building contexts for mathqa on rank 0...
  0%|          | 0/2985 [00:00<?, ?it/s]  9%|▉         | 283/2985 [00:00<00:00, 2819.80it/s] 19%|█▉        | 565/2985 [00:00<00:00, 2807.07it/s] 28%|██▊       | 850/2985 [00:00<00:00, 2822.45it/s] 38%|███▊      | 1134/2985 [00:00<00:00, 2829.16it/s] 48%|████▊     | 1418/2985 [00:00<00:00, 2830.68it/s] 57%|█████▋    | 1703/2985 [00:00<00:00, 2835.49it/s] 67%|██████▋   | 1987/2985 [00:00<00:00, 2828.35it/s] 76%|███████▌  | 2270/2985 [00:00<00:00, 2827.59it/s] 86%|████████▌ | 2554/2985 [00:00<00:00, 2829.30it/s] 95%|█████████▌| 2839/2985 [00:01<00:00, 2832.62it/s]100%|██████████| 2985/2985 [00:01<00:00, 2829.94it/s]
2025-05-25:02:23:04 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=mathqa,output_type=multiple_choice,num_fewshot=0,num_samples=2985); document 0; context prompt (starting on next line):    
Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?
Answer:
(end of prompt on previous line)
target string or answer choice index (starting on next line):
0
(end of target on previous line)
2025-05-25:02:23:04 INFO     [evaluator_utils:210] Request: Instance(request_type='loglikelihood', doc={'Problem': 'a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?', 'Rationale': '"giving no discount to customer implies selling the product on printed price . suppose the cost price of the article is 100 . then printed price = 100 ã — ( 100 + 31.1 ) / ( 100 â ˆ ’ 5 ) = 138 hence , required % profit = 138 â € “ 100 = 38 % answer a"', 'options': 'a ) 38 , b ) 27.675 , c ) 30 , d ) data inadequate , e ) none of these', 'correct': 'a', 'annotated_formula': 'subtract(divide(multiply(add(const_100, 31.1), const_100), subtract(const_100, 5)), const_100)', 'linear_formula': 'add(n1,const_100)|subtract(const_100,n0)|multiply(#0,const_100)|divide(#2,#1)|subtract(#3,const_100)|', 'category': 'gain'}, arguments=('Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?\nAnswer:', ' 38'), idx=0, metadata=('mathqa', 0, 1), resps=[], filtered_resps={}, task_name='mathqa', doc_id=0, repeats=1)
2025-05-25:02:23:04 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=mathqa,output_type=multiple_choice,num_fewshot=0,num_samples=2985); document 0; context prompt (starting on next line):    
Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?
Answer:
(end of prompt on previous line)
target string or answer choice index (starting on next line):
0
(end of target on previous line)
2025-05-25:02:23:04 INFO     [evaluator_utils:210] Request: Instance(request_type='loglikelihood', doc={'Problem': 'a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?', 'Rationale': '"giving no discount to customer implies selling the product on printed price . suppose the cost price of the article is 100 . then printed price = 100 ã — ( 100 + 31.1 ) / ( 100 â ˆ ’ 5 ) = 138 hence , required % profit = 138 â € “ 100 = 38 % answer a"', 'options': 'a ) 38 , b ) 27.675 , c ) 30 , d ) data inadequate , e ) none of these', 'correct': 'a', 'annotated_formula': 'subtract(divide(multiply(add(const_100, 31.1), const_100), subtract(const_100, 5)), const_100)', 'linear_formula': 'add(n1,const_100)|subtract(const_100,n0)|multiply(#0,const_100)|divide(#2,#1)|subtract(#3,const_100)|', 'category': 'gain'}, arguments=('Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?\nAnswer:', ' 27.675'), idx=1, metadata=('mathqa', 0, 1), resps=[], filtered_resps={}, task_name='mathqa', doc_id=0, repeats=1)
2025-05-25:02:23:04 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=mathqa,output_type=multiple_choice,num_fewshot=0,num_samples=2985); document 0; context prompt (starting on next line):    
Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?
Answer:
(end of prompt on previous line)
target string or answer choice index (starting on next line):
0
(end of target on previous line)
2025-05-25:02:23:04 INFO     [evaluator_utils:210] Request: Instance(request_type='loglikelihood', doc={'Problem': 'a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?', 'Rationale': '"giving no discount to customer implies selling the product on printed price . suppose the cost price of the article is 100 . then printed price = 100 ã — ( 100 + 31.1 ) / ( 100 â ˆ ’ 5 ) = 138 hence , required % profit = 138 â € “ 100 = 38 % answer a"', 'options': 'a ) 38 , b ) 27.675 , c ) 30 , d ) data inadequate , e ) none of these', 'correct': 'a', 'annotated_formula': 'subtract(divide(multiply(add(const_100, 31.1), const_100), subtract(const_100, 5)), const_100)', 'linear_formula': 'add(n1,const_100)|subtract(const_100,n0)|multiply(#0,const_100)|divide(#2,#1)|subtract(#3,const_100)|', 'category': 'gain'}, arguments=('Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?\nAnswer:', ' 30'), idx=2, metadata=('mathqa', 0, 1), resps=[], filtered_resps={}, task_name='mathqa', doc_id=0, repeats=1)
2025-05-25:02:23:04 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=mathqa,output_type=multiple_choice,num_fewshot=0,num_samples=2985); document 0; context prompt (starting on next line):    
Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?
Answer:
(end of prompt on previous line)
target string or answer choice index (starting on next line):
0
(end of target on previous line)
2025-05-25:02:23:04 INFO     [evaluator_utils:210] Request: Instance(request_type='loglikelihood', doc={'Problem': 'a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?', 'Rationale': '"giving no discount to customer implies selling the product on printed price . suppose the cost price of the article is 100 . then printed price = 100 ã — ( 100 + 31.1 ) / ( 100 â ˆ ’ 5 ) = 138 hence , required % profit = 138 â € “ 100 = 38 % answer a"', 'options': 'a ) 38 , b ) 27.675 , c ) 30 , d ) data inadequate , e ) none of these', 'correct': 'a', 'annotated_formula': 'subtract(divide(multiply(add(const_100, 31.1), const_100), subtract(const_100, 5)), const_100)', 'linear_formula': 'add(n1,const_100)|subtract(const_100,n0)|multiply(#0,const_100)|divide(#2,#1)|subtract(#3,const_100)|', 'category': 'gain'}, arguments=('Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?\nAnswer:', ' data inadequate'), idx=3, metadata=('mathqa', 0, 1), resps=[], filtered_resps={}, task_name='mathqa', doc_id=0, repeats=1)
2025-05-25:02:23:04 INFO     [evaluator_utils:206] Task: ConfigurableTask(task_name=mathqa,output_type=multiple_choice,num_fewshot=0,num_samples=2985); document 0; context prompt (starting on next line):    
Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?
Answer:
(end of prompt on previous line)
target string or answer choice index (starting on next line):
0
(end of target on previous line)
2025-05-25:02:23:04 INFO     [evaluator_utils:210] Request: Instance(request_type='loglikelihood', doc={'Problem': 'a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?', 'Rationale': '"giving no discount to customer implies selling the product on printed price . suppose the cost price of the article is 100 . then printed price = 100 ã — ( 100 + 31.1 ) / ( 100 â ˆ ’ 5 ) = 138 hence , required % profit = 138 â € “ 100 = 38 % answer a"', 'options': 'a ) 38 , b ) 27.675 , c ) 30 , d ) data inadequate , e ) none of these', 'correct': 'a', 'annotated_formula': 'subtract(divide(multiply(add(const_100, 31.1), const_100), subtract(const_100, 5)), const_100)', 'linear_formula': 'add(n1,const_100)|subtract(const_100,n0)|multiply(#0,const_100)|divide(#2,#1)|subtract(#3,const_100)|', 'category': 'gain'}, arguments=('Question: a shopkeeper sold an article offering a discount of 5 % and earned a profit of 31.1 % . what would have been the percentage of profit earned if no discount had been offered ?\nAnswer:', ' none of these'), idx=4, metadata=('mathqa', 0, 1), resps=[], filtered_resps={}, task_name='mathqa', doc_id=0, repeats=1)
2025-05-25:02:23:04 INFO     [evaluator:559] Running loglikelihood requests
Running loglikelihood requests:   0%|          | 0/14925 [00:00<?, ?it/s]Running loglikelihood requests:   0%|          | 1/14925 [00:15<65:02:18, 15.69s/it]Running loglikelihood requests:   0%|          | 67/14925 [00:16<45:22,  5.46it/s]  Running loglikelihood requests:   1%|          | 136/14925 [00:18<20:39, 11.93it/s]Running loglikelihood requests:   1%|▏         | 210/14925 [00:19<12:29, 19.63it/s]Running loglikelihood requests:   2%|▏         | 279/14925 [00:20<09:03, 26.95it/s]Running loglikelihood requests:   3%|▎         | 379/14925 [00:21<06:06, 39.74it/s]Running loglikelihood requests:   3%|▎         | 463/14925 [00:22<04:55, 48.88it/s]Running loglikelihood requests:   4%|▎         | 536/14925 [00:23<04:23, 54.61it/s]Running loglikelihood requests:   4%|▍         | 609/14925 [00:24<03:59, 59.71it/s]Running loglikelihood requests:   5%|▍         | 682/14925 [00:25<03:42, 64.01it/s]Running loglikelihood requests:   5%|▌         | 756/14925 [00:26<03:28, 67.83it/s]Running loglikelihood requests:   6%|▌         | 832/14925 [00:27<03:17, 71.43it/s]Running loglikelihood requests:   6%|▌         | 914/14925 [00:27<03:04, 76.12it/s]Running loglikelihood requests:   7%|▋         | 989/14925 [00:28<02:58, 78.02it/s]Running loglikelihood requests:   7%|▋         | 1059/14925 [00:29<02:58, 77.86it/s]Running loglikelihood requests:   8%|▊         | 1137/14925 [00:30<02:50, 80.84it/s]Running loglikelihood requests:   8%|▊         | 1223/14925 [00:31<02:39, 86.14it/s]Running loglikelihood requests:   9%|▊         | 1295/14925 [00:32<02:39, 85.45it/s]Running loglikelihood requests:   9%|▉         | 1373/14925 [00:33<02:35, 87.15it/s]Running loglikelihood requests:  10%|▉         | 1460/14925 [00:34<02:27, 91.55it/s]Running loglikelihood requests:  10%|█         | 1548/14925 [00:34<02:20, 95.09it/s]Running loglikelihood requests:  11%|█         | 1625/14925 [00:35<02:20, 94.50it/s]Running loglikelihood requests:  11%|█▏        | 1700/14925 [00:36<02:21, 93.45it/s]Running loglikelihood requests:  12%|█▏        | 1776/14925 [00:37<02:19, 94.15it/s]Running loglikelihood requests:  12%|█▏        | 1860/14925 [00:38<02:13, 98.01it/s]Running loglikelihood requests:  13%|█▎        | 1930/14925 [00:38<02:15, 95.83it/s]Running loglikelihood requests:  13%|█▎        | 2000/14925 [00:39<02:17, 94.33it/s]Running loglikelihood requests:  14%|█▍        | 2071/14925 [00:40<02:17, 93.63it/s]Running loglikelihood requests:  14%|█▍        | 2158/14925 [00:41<02:08, 99.72it/s]Running loglikelihood requests:  15%|█▍        | 2231/14925 [00:41<02:08, 98.84it/s]Running loglikelihood requests:  15%|█▌        | 2309/14925 [00:42<02:05, 100.72it/s]Running loglikelihood requests:  16%|█▌        | 2379/14925 [00:43<02:06, 98.95it/s] Running loglikelihood requests:  16%|█▋        | 2458/14925 [00:44<02:03, 101.35it/s]Running loglikelihood requests:  17%|█▋        | 2537/14925 [00:44<01:59, 103.28it/s]Running loglikelihood requests:  17%|█▋        | 2604/14925 [00:45<02:03, 99.78it/s] Running loglikelihood requests:  18%|█▊        | 2672/14925 [00:46<02:05, 97.83it/s]Running loglikelihood requests:  18%|█▊        | 2741/14925 [00:47<02:05, 97.24it/s]Running loglikelihood requests:  19%|█▉        | 2822/14925 [00:47<02:00, 100.57it/s]Running loglikelihood requests:  19%|█▉        | 2898/14925 [00:48<01:57, 102.15it/s]Running loglikelihood requests:  20%|█▉        | 2984/14925 [00:49<01:51, 107.40it/s]Running loglikelihood requests:  20%|██        | 3059/14925 [00:49<01:51, 106.72it/s]Running loglikelihood requests:  21%|██        | 3142/14925 [00:50<01:47, 109.56it/s]Running loglikelihood requests:  22%|██▏       | 3216/14925 [00:51<01:48, 107.79it/s]Running loglikelihood requests:  22%|██▏       | 3287/14925 [00:52<01:50, 105.52it/s]Running loglikelihood requests:  23%|██▎       | 3371/14925 [00:52<01:45, 109.61it/s]Running loglikelihood requests:  23%|██▎       | 3447/14925 [00:53<01:45, 109.05it/s]Running loglikelihood requests:  24%|██▎       | 3519/14925 [00:54<01:44, 109.06it/s]Running loglikelihood requests:  24%|██▍       | 3600/14925 [00:54<01:40, 112.92it/s]Running loglikelihood requests:  25%|██▍       | 3677/14925 [00:55<01:38, 114.24it/s]Running loglikelihood requests:  25%|██▌       | 3748/14925 [00:56<01:39, 112.57it/s]Running loglikelihood requests:  26%|██▌       | 3831/14925 [00:56<01:35, 116.65it/s]Running loglikelihood requests:  26%|██▋       | 3918/14925 [00:57<01:30, 121.82it/s]Running loglikelihood requests:  27%|██▋       | 3997/14925 [00:58<01:29, 121.91it/s]Running loglikelihood requests:  27%|██▋       | 4083/14925 [00:58<01:26, 125.27it/s]Running loglikelihood requests:  28%|██▊       | 4157/14925 [00:59<01:28, 122.21it/s]Running loglikelihood requests:  28%|██▊       | 4235/14925 [01:00<01:27, 121.80it/s]Running loglikelihood requests:  29%|██▉       | 4305/14925 [01:00<01:29, 118.43it/s]Running loglikelihood requests:  29%|██▉       | 4377/14925 [01:01<01:30, 116.87it/s]Running loglikelihood requests:  30%|██▉       | 4457/14925 [01:01<01:27, 119.60it/s]Running loglikelihood requests:  30%|███       | 4524/14925 [01:02<01:30, 115.33it/s]Running loglikelihood requests:  31%|███       | 4595/14925 [01:03<01:30, 114.43it/s]Running loglikelihood requests:  31%|███▏      | 4678/14925 [01:03<01:25, 119.44it/s]Running loglikelihood requests:  32%|███▏      | 4750/14925 [01:04<01:26, 117.65it/s]Running loglikelihood requests:  32%|███▏      | 4833/14925 [01:05<01:22, 122.10it/s]Running loglikelihood requests:  33%|███▎      | 4907/14925 [01:05<01:22, 121.02it/s]Running loglikelihood requests:  33%|███▎      | 4985/14925 [01:06<01:21, 122.31it/s]Running loglikelihood requests:  34%|███▍      | 5060/14925 [01:06<01:20, 121.89it/s]Running loglikelihood requests:  34%|███▍      | 5130/14925 [01:07<01:22, 119.18it/s]Running loglikelihood requests:  35%|███▍      | 5198/14925 [01:08<01:23, 117.07it/s]Running loglikelihood requests:  35%|███▌      | 5279/14925 [01:08<01:19, 121.81it/s]Running loglikelihood requests:  36%|███▌      | 5350/14925 [01:09<01:19, 120.35it/s]Running loglikelihood requests:  36%|███▋      | 5424/14925 [01:10<01:18, 120.72it/s]Running loglikelihood requests:  37%|███▋      | 5507/14925 [01:10<01:14, 127.12it/s]Running loglikelihood requests:  37%|███▋      | 5575/14925 [01:11<01:15, 124.14it/s]Running loglikelihood requests:  38%|███▊      | 5650/14925 [01:11<01:13, 125.67it/s]Running loglikelihood requests:  38%|███▊      | 5723/14925 [01:12<01:13, 125.59it/s]Running loglikelihood requests:  39%|███▉      | 5806/14925 [01:12<01:09, 131.18it/s]Running loglikelihood requests:  39%|███▉      | 5881/14925 [01:13<01:09, 131.01it/s]Running loglikelihood requests:  40%|███▉      | 5948/14925 [01:14<01:10, 126.74it/s]Running loglikelihood requests:  40%|████      | 6034/14925 [01:14<01:06, 133.44it/s]Running loglikelihood requests:  41%|████      | 6102/14925 [01:15<01:08, 128.79it/s]Running loglikelihood requests:  42%|████▏     | 6198/14925 [01:15<01:02, 140.04it/s]Running loglikelihood requests:  42%|████▏     | 6273/14925 [01:16<01:02, 138.85it/s]Running loglikelihood requests:  42%|████▏     | 6342/14925 [01:16<01:03, 135.05it/s]Running loglikelihood requests:  43%|████▎     | 6423/14925 [01:17<01:01, 138.63it/s]Running loglikelihood requests:  44%|████▎     | 6505/14925 [01:18<00:59, 141.62it/s]Running loglikelihood requests:  44%|████▍     | 6574/14925 [01:18<01:00, 137.22it/s]Running loglikelihood requests:  45%|████▍     | 6651/14925 [01:19<00:59, 138.23it/s]Running loglikelihood requests:  45%|████▌     | 6731/14925 [01:19<00:58, 140.63it/s]Running loglikelihood requests:  46%|████▌     | 6803/14925 [01:20<00:58, 137.86it/s]Running loglikelihood requests:  46%|████▌     | 6880/14925 [01:20<00:57, 138.76it/s]Running loglikelihood requests:  47%|████▋     | 6959/14925 [01:21<00:56, 141.35it/s]Running loglikelihood requests:  47%|████▋     | 7039/14925 [01:21<00:54, 143.87it/s]Running loglikelihood requests:  48%|████▊     | 7125/14925 [01:22<00:52, 148.35it/s]Running loglikelihood requests:  48%|████▊     | 7214/14925 [01:22<00:50, 153.83it/s]Running loglikelihood requests:  49%|████▉     | 7288/14925 [01:23<00:51, 149.71it/s]Running loglikelihood requests:  49%|████▉     | 7368/14925 [01:23<00:50, 149.88it/s]Running loglikelihood requests:  50%|████▉     | 7444/14925 [01:24<00:50, 147.80it/s]Running loglikelihood requests:  50%|█████     | 7526/14925 [01:25<00:48, 151.05it/s]Running loglikelihood requests:  51%|█████     | 7597/14925 [01:25<00:49, 147.28it/s]Running loglikelihood requests:  51%|█████▏    | 7685/14925 [01:26<00:46, 154.21it/s]Running loglikelihood requests:  52%|█████▏    | 7756/14925 [01:26<00:48, 149.30it/s]Running loglikelihood requests:  53%|█████▎    | 7842/14925 [01:27<00:45, 154.78it/s]Running loglikelihood requests:  53%|█████▎    | 7921/14925 [01:27<00:45, 154.68it/s]Running loglikelihood requests:  54%|█████▎    | 8002/14925 [01:28<00:44, 155.80it/s]Running loglikelihood requests:  54%|█████▍    | 8074/14925 [01:28<00:45, 151.29it/s]Running loglikelihood requests:  55%|█████▍    | 8143/14925 [01:29<00:45, 147.67it/s]Running loglikelihood requests:  55%|█████▌    | 8226/14925 [01:29<00:43, 153.19it/s]Running loglikelihood requests:  56%|█████▌    | 8312/14925 [01:30<00:41, 158.94it/s]Running loglikelihood requests:  56%|█████▌    | 8390/14925 [01:30<00:41, 158.47it/s]Running loglikelihood requests:  57%|█████▋    | 8464/14925 [01:31<00:41, 155.71it/s]Running loglikelihood requests:  57%|█████▋    | 8552/14925 [01:31<00:39, 162.25it/s]Running loglikelihood requests:  58%|█████▊    | 8640/14925 [01:32<00:37, 166.75it/s]Running loglikelihood requests:  58%|█████▊    | 8711/14925 [01:32<00:38, 159.75it/s]Running loglikelihood requests:  59%|█████▉    | 8792/14925 [01:33<00:37, 162.29it/s]Running loglikelihood requests:  60%|█████▉    | 8885/14925 [01:33<00:35, 171.40it/s]Running loglikelihood requests:  60%|██████    | 8975/14925 [01:34<00:33, 175.74it/s]Running loglikelihood requests:  61%|██████    | 9065/14925 [01:34<00:32, 179.42it/s]Running loglikelihood requests:  61%|██████    | 9138/14925 [01:34<00:33, 171.66it/s]Running loglikelihood requests:  62%|██████▏   | 9221/14925 [01:35<00:33, 170.64it/s]Running loglikelihood requests:  62%|██████▏   | 9311/14925 [01:35<00:31, 175.73it/s]Running loglikelihood requests:  63%|██████▎   | 9388/14925 [01:36<00:32, 171.45it/s]Running loglikelihood requests:  63%|██████▎   | 9473/14925 [01:36<00:31, 175.06it/s]Running loglikelihood requests:  64%|██████▍   | 9552/14925 [01:37<00:30, 173.88it/s]Running loglikelihood requests:  65%|██████▍   | 9639/14925 [01:37<00:29, 178.13it/s]Running loglikelihood requests:  65%|██████▌   | 9716/14925 [01:38<00:29, 174.67it/s]Running loglikelihood requests:  66%|██████▌   | 9798/14925 [01:38<00:29, 175.89it/s]Running loglikelihood requests:  66%|██████▌   | 9871/14925 [01:39<00:29, 171.05it/s]Running loglikelihood requests:  67%|██████▋   | 9970/14925 [01:39<00:26, 184.19it/s]Running loglikelihood requests:  67%|██████▋   | 10035/14925 [01:40<00:28, 172.94it/s]Running loglikelihood requests:  68%|██████▊   | 10099/14925 [01:40<00:29, 164.70it/s]Running loglikelihood requests:  68%|██████▊   | 10171/14925 [01:40<00:29, 163.59it/s]Running loglikelihood requests:  69%|██████▉   | 10263/14925 [01:41<00:26, 176.35it/s]Running loglikelihood requests:  69%|██████▉   | 10342/14925 [01:41<00:26, 176.23it/s]Running loglikelihood requests:  70%|██████▉   | 10419/14925 [01:42<00:25, 175.92it/s]Running loglikelihood requests:  70%|███████   | 10493/14925 [01:42<00:25, 171.87it/s]Running loglikelihood requests:  71%|███████   | 10569/14925 [01:43<00:25, 172.19it/s]Running loglikelihood requests:  71%|███████▏  | 10660/14925 [01:43<00:23, 182.04it/s]Running loglikelihood requests:  72%|███████▏  | 10740/14925 [01:44<00:22, 185.46it/s]Running loglikelihood requests:  73%|███████▎  | 10822/14925 [01:44<00:21, 189.17it/s]Running loglikelihood requests:  73%|███████▎  | 10900/14925 [01:44<00:21, 189.14it/s]Running loglikelihood requests:  74%|███████▎  | 10977/14925 [01:45<00:20, 188.29it/s]Running loglikelihood requests:  74%|███████▍  | 11063/14925 [01:45<00:19, 194.53it/s]Running loglikelihood requests:  75%|███████▍  | 11138/14925 [01:46<00:19, 191.28it/s]Running loglikelihood requests:  75%|███████▌  | 11218/14925 [01:46<00:19, 192.26it/s]Running loglikelihood requests:  76%|███████▌  | 11305/14925 [01:46<00:18, 198.22it/s]Running loglikelihood requests:  76%|███████▋  | 11387/14925 [01:47<00:17, 199.56it/s]Running loglikelihood requests:  77%|███████▋  | 11467/14925 [01:47<00:17, 199.10it/s]Running loglikelihood requests:  77%|███████▋  | 11542/14925 [01:48<00:17, 195.36it/s]Running loglikelihood requests:  78%|███████▊  | 11629/14925 [01:48<00:16, 201.20it/s]Running loglikelihood requests:  78%|███████▊  | 11698/14925 [01:48<00:16, 192.80it/s]Running loglikelihood requests:  79%|███████▉  | 11779/14925 [01:49<00:16, 195.70it/s]Running loglikelihood requests:  79%|███████▉  | 11861/14925 [01:49<00:15, 198.37it/s]Running loglikelihood requests:  80%|████████  | 11957/14925 [01:50<00:14, 210.43it/s]Running loglikelihood requests:  81%|████████  | 12030/14925 [01:50<00:14, 204.29it/s]Running loglikelihood requests:  81%|████████  | 12109/14925 [01:50<00:13, 204.25it/s]Running loglikelihood requests:  82%|████████▏ | 12185/14925 [01:51<00:13, 201.32it/s]Running loglikelihood requests:  82%|████████▏ | 12269/14925 [01:51<00:12, 205.92it/s]Running loglikelihood requests:  83%|████████▎ | 12347/14925 [01:52<00:12, 206.40it/s]Running loglikelihood requests:  83%|████████▎ | 12447/14925 [01:52<00:11, 223.56it/s]Running loglikelihood requests:  84%|████████▍ | 12535/14925 [01:52<00:10, 228.96it/s]Running loglikelihood requests:  85%|████████▍ | 12619/14925 [01:53<00:10, 229.72it/s]Running loglikelihood requests:  85%|████████▌ | 12731/14925 [01:53<00:08, 252.17it/s]Running loglikelihood requests:  86%|████████▌ | 12802/14925 [01:53<00:09, 235.89it/s]Running loglikelihood requests:  87%|████████▋ | 12912/14925 [01:54<00:07, 255.39it/s]Running loglikelihood requests:  87%|████████▋ | 12992/14925 [01:54<00:07, 245.13it/s]Running loglikelihood requests:  88%|████████▊ | 13074/14925 [01:55<00:07, 240.95it/s]Running loglikelihood requests:  88%|████████▊ | 13159/14925 [01:55<00:07, 240.44it/s]Running loglikelihood requests:  89%|████████▊ | 13232/14925 [01:55<00:07, 230.54it/s]Running loglikelihood requests:  89%|████████▉ | 13320/14925 [01:56<00:06, 235.97it/s]Running loglikelihood requests:  90%|████████▉ | 13422/14925 [01:56<00:05, 256.06it/s]Running loglikelihood requests:  91%|█████████ | 13510/14925 [01:56<00:05, 258.58it/s]Running loglikelihood requests:  91%|█████████ | 13589/14925 [01:57<00:05, 252.68it/s]Running loglikelihood requests:  92%|█████████▏| 13676/14925 [01:57<00:04, 256.02it/s]Running loglikelihood requests:  92%|█████████▏| 13764/14925 [01:57<00:04, 263.20it/s]Running loglikelihood requests:  93%|█████████▎| 13856/14925 [01:58<00:03, 271.88it/s]Running loglikelihood requests:  93%|█████████▎| 13948/14925 [01:58<00:03, 278.91it/s]Running loglikelihood requests:  94%|█████████▍| 14035/14925 [01:58<00:03, 279.29it/s]Running loglikelihood requests:  95%|█████████▍| 14121/14925 [01:58<00:02, 280.06it/s]Running loglikelihood requests:  95%|█████████▌| 14217/14925 [01:59<00:02, 293.92it/s]Running loglikelihood requests:  96%|█████████▌| 14310/14925 [01:59<00:02, 300.90it/s]Running loglikelihood requests:  96%|█████████▋| 14395/14925 [01:59<00:01, 304.61it/s]Running loglikelihood requests:  97%|█████████▋| 14488/14925 [02:00<00:01, 316.01it/s]Running loglikelihood requests:  98%|█████████▊| 14578/14925 [02:00<00:01, 327.67it/s]Running loglikelihood requests:  98%|█████████▊| 14659/14925 [02:00<00:00, 329.92it/s]Running loglikelihood requests:  99%|█████████▉| 14769/14925 [02:00<00:00, 362.79it/s]Running loglikelihood requests: 100%|█████████▉| 14876/14925 [02:00<00:00, 451.01it/s]Running loglikelihood requests: 100%|██████████| 14925/14925 [02:00<00:00, 123.40it/s]
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
2025-05-25:02:25:29 INFO     [loggers.evaluation_tracker:209] Saving results aggregated
2025-05-25:02:25:29 INFO     [loggers.evaluation_tracker:298] Saving per-sample results for: mathqa
Passed argument batch_size = auto:1. Detecting largest batch size
Determined largest batch size: 64
hf (pretrained=mistralai/Mistral-7B-Instruct-v0.3), gen_kwargs: (None), limit: None, num_fewshot: None, batch_size: auto (64)
|Tasks |Version|Filter|n-shot| Metric |   |Value |   |Stderr|
|------|------:|------|-----:|--------|---|-----:|---|-----:|
|mathqa|      1|none  |     0|acc     |↑  |0.3752|±  |0.0089|
|      |       |none  |     0|acc_norm|↑  |0.3853|±  |0.0089|

